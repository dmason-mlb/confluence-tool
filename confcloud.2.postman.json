{
  "info": {
    "_postman_id": "83e9e5bd-2d8b-4a0b-9fdb-4be802c05620",
    "name": "The Confluence Cloud REST API v2",
    "description": "This document describes Confluence's v2 APIs. This is intended to be an iteration on the existing Confluence Cloud REST API with improvements in both endpoint definitions and performance.",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "Admin Key",
      "description": "The [Admin Key feature](https://support.atlassian.com/confluence-cloud/docs/bypass-access-restrictions-on-a-page-with-admin-key/) is only offered with Confluence Cloud Premium and Enterprise to organization or site admins.\n\n**NOTE:** Users can only make calls to our public REST APIs using a valid Admin Key by adding the following HTTP header on their requests: `Atl-Confluence-With-Admin-Key: true`. Visit the [Confluence Cloud Changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-2480) for more details.",
      "item": [
        {
          "name": "Get Admin Key",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}admin-key",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns information about the admin key if one is currently enabled for the calling user within the site.\n\n**[Permissions](https://support.atlassian.com/user-management/docs/give-users-admin-permissions/#Centralized-user-management-content) required**:\nUser must be an organization or site admin."
          },
          "response": []
        },
        {
          "name": "Enable Admin Key",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}admin-key",
              "query": [],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Enables admin key access for the calling user within the site. If an admin key already exists for the user, a new one will be issued with an updated expiration time.\n\n**Note:** The `durationInMinutes` field within the request body is optional. If the request body is empty or if the `durationInMinutes` is set to 0 minutes, a new admin key will be issued to the calling user with a default duration of 10 minutes.\n\n**[Permissions](https://support.atlassian.com/user-management/docs/give-users-admin-permissions/#Centralized-user-management-content) required**:\nUser must be an organization or site admin.",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Disable Admin Key",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}admin-key",
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "header": [],
            "description": "Disables admin key access for the calling user within the site.\n\n**[Permissions](https://support.atlassian.com/user-management/docs/give-users-admin-permissions/#Centralized-user-management-content) required**:\nUser must be an organization or site admin."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Attachment",
      "description": "",
      "item": [
        {
          "name": "Get attachments",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}attachments",
              "query": [
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "status",
                  "value": "{{status}}",
                  "disabled": true,
                  "description": "Filter the results to attachments based on their status. By default, `current` and `archived` are used."
                },
                {
                  "key": "mediaType",
                  "value": "{{mediaType}}",
                  "disabled": true,
                  "description": "Filters on the mediaType of attachments. Only one may be specified."
                },
                {
                  "key": "filename",
                  "value": "{{filename}}",
                  "disabled": true,
                  "description": "Filters on the file-name of attachments. Only one may be specified."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all attachments. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the container of the attachment.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get attachment by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}attachments/:id",
              "query": [
                {
                  "key": "version",
                  "value": "{{version}}",
                  "disabled": true,
                  "description": "Allows you to retrieve a previously published version. Specify the previous version's number to retrieve its details."
                },
                {
                  "key": "include-labels",
                  "value": "{{include-labels}}",
                  "disabled": true,
                  "description": "Includes labels associated with this attachment in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-properties",
                  "value": "{{include-properties}}",
                  "disabled": true,
                  "description": "Includes content properties associated with this attachment in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-operations",
                  "value": "{{include-operations}}",
                  "disabled": true,
                  "description": "Includes operations associated with this attachment in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-versions",
                  "value": "{{include-versions}}",
                  "disabled": true,
                  "description": "Includes versions associated with this attachment in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-version",
                  "value": "{{include-version}}",
                  "disabled": true,
                  "description": "Includes the current version associated with this attachment in the response.\nBy default this is included and can be omitted by setting the value to `false`."
                },
                {
                  "key": "include-collaborators",
                  "value": "{{include-collaborators}}",
                  "disabled": true,
                  "description": "Includes collaborators on the attachment."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the attachment to be returned. If you don't know the attachment's ID, use Get attachments for page/blogpost/custom content.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns a specific attachment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the attachment's container.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete attachment",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}attachments/:id",
              "query": [
                {
                  "key": "purge",
                  "value": "{{purge}}",
                  "disabled": true,
                  "description": "If attempting to purge the attachment."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the attachment to be deleted.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete an attachment by id.\n\nDeleting an attachment moves the attachment to the trash, where it can be restored later. To permanently delete an attachment (or \"purge\" it),\nthe endpoint must be called on a **trashed** attachment with the following param `purge=true`.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the container of the attachment.\nPermission to delete attachments in the space.\nPermission to administer the space (if attempting to purge).",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get attachments for blog post",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:id/attachments",
              "query": [
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "status",
                  "value": "{{status}}",
                  "disabled": true,
                  "description": "Filter the results to attachments based on their status. By default, `current` and `archived` are used."
                },
                {
                  "key": "mediaType",
                  "value": "{{mediaType}}",
                  "disabled": true,
                  "description": "Filters on the mediaType of attachments. Only one may be specified."
                },
                {
                  "key": "filename",
                  "value": "{{filename}}",
                  "disabled": true,
                  "description": "Filters on the file-name of attachments. Only one may be specified."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the blog post for which attachments should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the attachments of specific blog post. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the blog post and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get attachments for custom content",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}custom-content/:id/attachments",
              "query": [
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "status",
                  "value": "{{status}}",
                  "disabled": true,
                  "description": "Filter the results to attachments based on their status. By default, `current` and `archived` are used."
                },
                {
                  "key": "mediaType",
                  "value": "{{mediaType}}",
                  "disabled": true,
                  "description": "Filters on the mediaType of attachments. Only one may be specified."
                },
                {
                  "key": "filename",
                  "value": "{{filename}}",
                  "disabled": true,
                  "description": "Filters on the file-name of attachments. Only one may be specified."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the custom content for which attachments should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the attachments of specific custom content. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the custom content and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get attachments for label",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}labels/:id/attachments",
              "query": [
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the label for which attachments should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the attachments of specified label. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the attachment and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get attachments for page",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:id/attachments",
              "query": [
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "status",
                  "value": "{{status}}",
                  "disabled": true,
                  "description": "Filter the results to attachments based on their status. By default, `current` and `archived` are used."
                },
                {
                  "key": "mediaType",
                  "value": "{{mediaType}}",
                  "disabled": true,
                  "description": "Filters on the mediaType of attachments. Only one may be specified."
                },
                {
                  "key": "filename",
                  "value": "{{filename}}",
                  "disabled": true,
                  "description": "Filters on the file-name of attachments. Only one may be specified."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the page for which attachments should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the attachments of specific page. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Ancestors",
      "description": "",
      "item": [
        {
          "name": "Get all ancestors of whiteboard",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}whiteboards/:id/ancestors",
              "query": [
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of items per result to return. If more results exist, call the endpoint with the highest ancestor's ID to fetch the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the whiteboard.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all ancestors for a given whiteboard by ID in top-to-bottom order (that is, the highest ancestor is the first\nitem in the response payload). The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available by calling this endpoint with the ID of first ancestor in the response payload.\n\nThis endpoint returns minimal information about each ancestor. To fetch more details, use a related endpoint, such\nas [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nPermission to view the whiteboard and its corresponding space",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get all ancestors of database",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}databases/:id/ancestors",
              "query": [
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of items per result to return. If more results exist, call the endpoint with the highest ancestor's ID to fetch the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the database.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all ancestors for a given database by ID in top-to-bottom order (that is, the highest ancestor is the first\nitem in the response payload). The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available by calling this endpoint with the ID of first ancestor in the response payload.\n\nThis endpoint returns minimal information about each ancestor. To fetch more details, use a related endpoint, such\nas [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nPermission to view the database and its corresponding space",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get all ancestors of Smart Link in content tree",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}embeds/:id/ancestors",
              "query": [
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of items per result to return. If more results exist, call the endpoint with the highest ancestor's ID to fetch the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Smart Link in the content tree.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all ancestors for a given Smart Link in the content tree by ID in top-to-bottom order (that is, the highest ancestor is\nthe first item in the response payload). The number of results is limited by the `limit` parameter and additional results \n(if available) will be available by calling this endpoint with the ID of first ancestor in the response payload.\n\nThis endpoint returns minimal information about each ancestor. To fetch more details, use a related endpoint, such\nas [Get Smart Link in the content tree by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nPermission to view the Smart Link in the content tree and its corresponding space",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get all ancestors of folder",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}folders/:id/ancestors",
              "query": [
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of items per result to return. If more results exist, call the endpoint with the highest ancestor's ID to fetch the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the folder.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all ancestors for a given folder by ID in top-to-bottom order (that is, the highest ancestor is\nthe first item in the response payload). The number of results is limited by the `limit` parameter and additional results \n(if available) will be available by calling this endpoint with the ID of first ancestor in the response payload.\n\nThis endpoint returns minimal information about each ancestor. To fetch more details, use a related endpoint, such\nas [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-folders-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nPermission to view the folder and its corresponding space",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get all ancestors of page",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:id/ancestors",
              "query": [
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of pages per result to return. If more results exist, call this endpoint with the highest ancestor's ID to fetch the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the page.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all ancestors for a given page by ID in top-to-bottom order (that is, the highest ancestor is the first\nitem in the response payload). The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available by calling this endpoint with the ID of first ancestor in the response payload.\n\nThis endpoint returns minimal information about each ancestor. To fetch more details, use a related endpoint, such\nas [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Blog Post",
      "description": "",
      "item": [
        {
          "name": "Get blog posts",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts",
              "query": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "disabled": true,
                  "description": "Filter the results based on blog post ids. Multiple blog post ids can be specified as a comma-separated list."
                },
                {
                  "key": "space-id",
                  "value": "{{space-id}}",
                  "disabled": true,
                  "description": "Filter the results based on space ids. Multiple space ids can be specified as a comma-separated list."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "status",
                  "value": "{{status}}",
                  "disabled": true,
                  "description": "Filter the results to blog posts based on their status. By default, `current` is used."
                },
                {
                  "key": "title",
                  "value": "{{title}}",
                  "disabled": true,
                  "description": "Filter the results to blog posts based on their title."
                },
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of blog posts per result to return. If more results exist, use the `Link` response header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all blog posts. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly blog posts that the user has permission to view will be returned.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create blog post",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts",
              "query": [
                {
                  "key": "private",
                  "value": "{{private}}",
                  "disabled": true,
                  "description": "The blog post will be private. Only the user who creates this blog post will have permission to view and edit one."
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Creates a new blog post in the space specified by the spaceId.\n\nBy default this will create the blog post as a non-draft, unless the status is specified as draft.\nIf creating a non-draft, the title must not be empty.\n\nCurrently only supports the storage representation specified in the body.representation enums below",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get blog post by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:id",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "get-draft",
                  "value": "{{get-draft}}",
                  "disabled": true,
                  "description": "Retrieve the draft version of this blog post."
                },
                {
                  "key": "status",
                  "value": "{{status}}",
                  "disabled": true,
                  "description": "Filter the blog post being retrieved by its status."
                },
                {
                  "key": "version",
                  "value": "{{version}}",
                  "disabled": true,
                  "description": "Allows you to retrieve a previously published version. Specify the previous version's number to retrieve its details."
                },
                {
                  "key": "include-labels",
                  "value": "{{include-labels}}",
                  "disabled": true,
                  "description": "Includes labels associated with this blog post in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-properties",
                  "value": "{{include-properties}}",
                  "disabled": true,
                  "description": "Includes content properties associated with this blog post in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-operations",
                  "value": "{{include-operations}}",
                  "disabled": true,
                  "description": "Includes operations associated with this blog post in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-likes",
                  "value": "{{include-likes}}",
                  "disabled": true,
                  "description": "Includes likes associated with this blog post in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-versions",
                  "value": "{{include-versions}}",
                  "disabled": true,
                  "description": "Includes versions associated with this blog post in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-version",
                  "value": "{{include-version}}",
                  "disabled": true,
                  "description": "Includes the current version associated with this blog post in the response.\nBy default this is included and can be omitted by setting the value to `false`."
                },
                {
                  "key": "include-favorited-by-current-user-status",
                  "value": "{{include-favorited-by-current-user-status}}",
                  "disabled": true,
                  "description": "Includes whether this blog post has been favorited by the current user."
                },
                {
                  "key": "include-webresources",
                  "value": "{{include-webresources}}",
                  "disabled": true,
                  "description": "Includes web resources that can be used to render blog post content on a client."
                },
                {
                  "key": "include-collaborators",
                  "value": "{{include-collaborators}}",
                  "disabled": true,
                  "description": "Includes collaborators on the blog post."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the blog post to be returned. If you don't know the blog post ID, use Get blog posts and filter the results.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns a specific blog post.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the blog post and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update blog post",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:id",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the blog post to be updated. If you don't know the blog post ID, use Get Blog Posts and filter the results.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a blog post by id.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the blog post and its corresponding space. Permission to update blog posts in the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Delete blog post",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:id",
              "query": [
                {
                  "key": "purge",
                  "value": "{{purge}}",
                  "disabled": true,
                  "description": "If attempting to purge the blog post."
                },
                {
                  "key": "draft",
                  "value": "{{draft}}",
                  "disabled": true,
                  "description": "If attempting to delete a blog post that is a draft."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the blog post to be deleted.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a blog post by id.\n\nBy default this will delete blog posts that are non-drafts. To delete a blog post that is a draft, the endpoint must be called on a \ndraft with the following param `draft=true`. Discarded drafts are not sent to the trash and are permanently deleted.\n\nDeleting a blog post that is not a draft moves the blog post to the trash, where it can be restored later.\nTo permanently delete a blog post (or \"purge\" it), the endpoint must be called on a **trashed** blog post with the following param `purge=true`.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the blog post and its corresponding space.\nPermission to delete blog posts in the space.\nPermission to administer the space (if attempting to purge).",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get blog posts for label",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}labels/:id/blogposts",
              "query": [
                {
                  "key": "space-id",
                  "value": "{{space-id}}",
                  "disabled": true,
                  "description": "Filter the results based on space ids. Multiple space ids can be specified as a comma-separated list."
                },
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of blog posts per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the label for which blog posts should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the blogposts of specified label. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get blog posts in space",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}spaces/:id/blogposts",
              "query": [
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "status",
                  "value": "{{status}}",
                  "disabled": true,
                  "description": "Filter the results to blog posts based on their status. By default, `current` is used."
                },
                {
                  "key": "title",
                  "value": "{{title}}",
                  "disabled": true,
                  "description": "Filter the results to blog posts based on their title."
                },
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of blog posts per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the space for which blog posts should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all blog posts in a space. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission) and view the space.\nOnly blog posts that the user has permission to view will be returned.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Children",
      "description": "",
      "item": [
        {
          "name": "Get direct children of a whiteboard",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}whiteboards/:id/direct-children",
              "query": [
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of items per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the parent whiteboard.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all children for given whiteboard id in the content tree. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\nThe following types of content will be returned:\n- Database\n- Embed\n- Folder\n- Page\n- Whiteboard\n\nThis endpoint returns minimal information about each child. To fetch more details, use a related endpoint based on the content type, such\nas:\n\n- [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get)\n- [Get embed by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get)\n- [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-folder/#api-folders-id-get)\n- [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get)\n- [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly content that the user has permission to view will be returned.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get direct children of a database",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}databases/:id/direct-children",
              "query": [
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of items per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the parent database.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all children for given database id in the content tree. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\nThe following types of content will be returned:\n- Database\n- Embed\n- Folder\n- Page\n- Whiteboard\n\nThis endpoint returns minimal information about each child. To fetch more details, use a related endpoint based on the content type, such\nas:\n\n- [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get)\n- [Get embed by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get)\n- [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-folder/#api-folders-id-get)\n- [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get)\n- [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly content that the user has permission to view will be returned.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get direct children of a Smart Link",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}embeds/:id/direct-children",
              "query": [
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of items per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the parent smart link.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all children for given smart link id in the content tree. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\nThe following types of content will be returned:\n- Database\n- Embed\n- Folder\n- Page\n- Whiteboard\n\nThis endpoint returns minimal information about each child. To fetch more details, use a related endpoint based on the content type, such\nas:\n\n- [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get)\n- [Get embed by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get)\n- [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-folder/#api-folders-id-get)\n- [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get)\n- [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly content that the user has permission to view will be returned.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get direct children of a folder",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}folders/:id/direct-children",
              "query": [
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of items per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the parent folder.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all children for given folder id in the content tree. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\nThe following types of content will be returned:\n- Database\n- Embed\n- Folder\n- Page\n- Whiteboard\n\nThis endpoint returns minimal information about each child. To fetch more details, use a related endpoint based on the content type, such\nas:\n\n- [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get)\n- [Get embed by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get)\n- [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-folder/#api-folders-id-get)\n- [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get)\n- [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly content that the user has permission to view will be returned.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get child pages",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:id/children",
              "query": [
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the parent page. If you don't know the page ID, use Get pages and filter the results.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all child pages for given page id. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly pages that the user has permission to view will be returned.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get child custom content",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}custom-content/:id/children",
              "query": [
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the parent custom content. If you don't know the custom content ID, use Get custom-content and filter the results.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all child custom content for given custom content id. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly custom content that the user has permission to view will be returned.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get direct children of a page",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:id/direct-children",
              "query": [
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of items per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the parent page.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all children for given page id in the content tree. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\nThe following types of content will be returned:\n- Database\n- Embed\n- Folder\n- Page\n- Whiteboard\n\nThis endpoint returns minimal information about each child. To fetch more details, use a related endpoint based on the content type, such\nas:\n\n- [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get)\n- [Get embed by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get)\n- [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-folder/#api-folders-id-get)\n- [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get)\n- [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly content that the user has permission to view will be returned.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Classification Level",
      "description": "",
      "item": [
        {
          "name": "Get list of classification levels",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}classification-levels",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns a list of [classification levels](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level) \navailable.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission).",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get space default classification level",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}spaces/:id/classification-level/default",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the space for which default classification level should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the [default classification level](https://support.atlassian.com/security-and-access-policies/docs/what-is-a-default-classification-level/) \nfor a specific space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to view the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update space default classification level",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}spaces/:id/classification-level/default",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the space for which default classification level should be updated.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "Update the [default classification level](https://support.atlassian.com/security-and-access-policies/docs/what-is-a-default-classification-level/) \nfor a specific space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and 'Admin' permission for the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Delete space default classification level",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}spaces/:id/classification-level/default",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the space for which default classification level should be deleted.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Returns the [default classification level](https://support.atlassian.com/security-and-access-policies/docs/what-is-a-default-classification-level/) \nfor a specific space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and 'Admin' permission for the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get page classification level",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:id/classification-level",
              "query": [
                {
                  "key": "status",
                  "value": "{{status}}",
                  "disabled": true,
                  "description": "Status of page from which classification level will fetched."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the page for which classification level should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to view the page.\n'Permission to edit the page is required if trying to view classification level for a draft.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update page classification level",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:id/classification-level",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the page for which classification level should be updated.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "Updates the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to edit the page.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Reset page classification level",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:id/classification-level/reset",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the page for which classification level should be updated.",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "Resets the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific page for the space \n[default classification level](https://support.atlassian.com/security-and-access-policies/docs/what-is-a-default-classification-level/).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to view the page.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get blog post classification level",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:id/classification-level",
              "query": [
                {
                  "key": "status",
                  "value": "{{status}}",
                  "disabled": true,
                  "description": "Status of blog post from which classification level will fetched."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the blog post for which classification level should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific blog post.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to view the blog post.\n'Permission to edit the blog post is required if trying to view classification level for a draft.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update blog post classification level",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:id/classification-level",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the blog post for which classification level should be updated.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "Updates the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific blog post.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to edit the blog post.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Reset blog post classification level",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:id/classification-level/reset",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the blog post for which classification level should be updated.",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "Resets the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific blog post for the space  \n[default classification level](https://support.atlassian.com/security-and-access-policies/docs/what-is-a-default-classification-level/).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to view the blog post.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get whiteboard classification level",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}whiteboards/:id/classification-level",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the whiteboard for which classification level should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific whiteboard.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to view the whiteboard.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update whiteboard classification level",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}whiteboards/:id/classification-level",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the whiteboard for which classification level should be updated.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "Updates the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific whiteboard.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to edit the whiteboard.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Reset whiteboard classification level",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}whiteboards/:id/classification-level/reset",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the whiteboard for which classification level should be updated.",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "Resets the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific whiteboard for the space \n[default classification level](https://support.atlassian.com/security-and-access-policies/docs/what-is-a-default-classification-level/).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to view the whiteboard.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get database classification level",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}databases/:id/classification-level",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the database for which classification level should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific database.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to view the database.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update database classification level",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}databases/:id/classification-level",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the database for which classification level should be updated.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "Updates the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific database.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to edit the database.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Reset database classification level",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}databases/:id/classification-level/reset",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the database for which classification level should be updated.",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "Resets the [classification level](https://developer.atlassian.com/cloud/admin/dlp/rest/intro/#Classification%20level)\nfor a specific database for the space \n[default classification level](https://support.atlassian.com/security-and-access-policies/docs/what-is-a-default-classification-level/).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Permission to access the Confluence site ('Can use' global permission) and permission to view the database.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Comment",
      "description": "",
      "item": [
        {
          "name": "Get attachment comments",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}attachments/:id/footer-comments",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of comments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "version",
                  "value": "{{version}}",
                  "disabled": true,
                  "description": "Version number of the attachment to retrieve comments for. If no version provided, retrieves comments for the latest version."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the attachment for which comments should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the comments of the specific attachment.\nThe number of results is limited by the `limit` parameter and additional results (if available) will be available through\nthe `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the attachment and its corresponding containers.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get custom content comments",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}custom-content/:id/footer-comments",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of comments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the custom content for which comments should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the comments of the specific custom content.\nThe number of results is limited by the `limit` parameter and additional results (if available) will be available through\nthe `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the custom content and its corresponding containers.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get footer comments for page",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:id/footer-comments",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "status",
                  "value": "{{status}}",
                  "disabled": true,
                  "description": "Filter the footer comment being retrieved by its status."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of footer comments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the page for which footer comments should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the root footer comments of specific page. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get inline comments for page",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:id/inline-comments",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "status",
                  "value": "{{status}}",
                  "disabled": true,
                  "description": "Filter the inline comment being retrieved by its status."
                },
                {
                  "key": "resolution-status",
                  "value": "{{resolution-status}}",
                  "disabled": true,
                  "description": "Filter the inline comment being retrieved by its resolution status."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of inline comments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the page for which inline comments should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the root inline comments of specific page. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get footer comments for blog post",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:id/footer-comments",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "status",
                  "value": "{{status}}",
                  "disabled": true,
                  "description": "Filter the footer comment being retrieved by its status."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of footer comments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the blog post for which footer comments should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the root footer comments of specific blog post. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the blog post and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get inline comments for blog post",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:id/inline-comments",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "status",
                  "value": "{{status}}",
                  "disabled": true,
                  "description": "Filter the inline comment being retrieved by its status."
                },
                {
                  "key": "resolution-status",
                  "value": "{{resolution-status}}",
                  "disabled": true,
                  "description": "Filter the inline comment being retrieved by its resolution status."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of inline comments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the blog post for which inline comments should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the root inline comments of specific blog post. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the blog post and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get footer comments",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}footer-comments",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of footer comments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all footer comments. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the container and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create footer comment",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}footer-comments",
              "query": [],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "Create a footer comment.\n\nThe footer comment can be made against several locations: \n- at the top level (specifying pageId or blogPostId in the request body)\n- as a reply (specifying parentCommentId in the request body)\n- against an attachment (note: this is different than the comments added via the attachment properties page on the UI, which are referred to as version comments)\n- against a custom content\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blogpost and its corresponding space. Permission to create comments in the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get footer comment by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}footer-comments/:comment-id",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "version",
                  "value": "{{version}}",
                  "disabled": true,
                  "description": "Allows you to retrieve a previously published version. Specify the previous version's number to retrieve its details."
                },
                {
                  "key": "include-properties",
                  "value": "{{include-properties}}",
                  "disabled": true,
                  "description": "Includes content properties associated with this footer comment in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-operations",
                  "value": "{{include-operations}}",
                  "disabled": true,
                  "description": "Includes operations associated with this footer comment in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-likes",
                  "value": "{{include-likes}}",
                  "disabled": true,
                  "description": "Includes likes associated with this footer comment in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-versions",
                  "value": "{{include-versions}}",
                  "disabled": true,
                  "description": "Includes versions associated with this footer comment in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-version",
                  "value": "{{include-version}}",
                  "disabled": true,
                  "description": "Includes the current version associated with this footer comment in the response.\nBy default this is included and can be omitted by setting the value to `false`."
                }
              ],
              "variable": [
                {
                  "key": "comment-id",
                  "value": "{{comment-id}}",
                  "description": "The ID of the comment to be retrieved.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves a footer comment by id\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the container and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update footer comment",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}footer-comments/:comment-id",
              "query": [],
              "variable": [
                {
                  "key": "comment-id",
                  "value": "{{comment-id}}",
                  "description": "The ID of the comment to be retrieved.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a footer comment. This can be used to update the body text of a comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blogpost and its corresponding space. Permission to create comments in the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Delete footer comment",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}footer-comments/:comment-id",
              "query": [],
              "variable": [
                {
                  "key": "comment-id",
                  "value": "{{comment-id}}",
                  "description": "The ID of the comment to be retrieved.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Deletes a footer comment. This is a permanent deletion and cannot be reverted.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blogpost and its corresponding space. Permission to delete comments in the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get children footer comments",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}footer-comments/:id/children",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of footer comments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the parent comment for which footer comment children should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the children footer comments of specific comment. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get inline comments",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}inline-comments",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of footer comments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all inline comments. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create inline comment",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}inline-comments",
              "query": [],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "Create an inline comment. This can be at the top level (specifying pageId or blogPostId in the request body)\nor as a reply (specifying parentCommentId in the request body). Note the inlineCommentProperties object in the\nrequest body is used to select the text the inline comment should be tied to. This is what determines the text \nhighlighting when viewing a page in Confluence.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blogpost and its corresponding space. Permission to create comments in the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get inline comment by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}inline-comments/:comment-id",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "version",
                  "value": "{{version}}",
                  "disabled": true,
                  "description": "Allows you to retrieve a previously published version. Specify the previous version's number to retrieve its details."
                },
                {
                  "key": "include-properties",
                  "value": "{{include-properties}}",
                  "disabled": true,
                  "description": "Includes content properties associated with this inline comment in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-operations",
                  "value": "{{include-operations}}",
                  "disabled": true,
                  "description": "Includes operations associated with this inline comment in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-likes",
                  "value": "{{include-likes}}",
                  "disabled": true,
                  "description": "Includes likes associated with this inline comment in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-versions",
                  "value": "{{include-versions}}",
                  "disabled": true,
                  "description": "Includes versions associated with this inline comment in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-version",
                  "value": "{{include-version}}",
                  "disabled": true,
                  "description": "Includes the current version associated with this inline comment in the response.\nBy default this is included and can be omitted by setting the value to `false`."
                }
              ],
              "variable": [
                {
                  "key": "comment-id",
                  "value": "{{comment-id}}",
                  "description": "The ID of the comment to be retrieved.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves an inline comment by id\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blogpost and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update inline comment",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}inline-comments/:comment-id",
              "query": [],
              "variable": [
                {
                  "key": "comment-id",
                  "value": "{{comment-id}}",
                  "description": "The ID of the comment to be retrieved.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update an inline comment. This can be used to update the body text of a comment and/or to resolve the comment\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blogpost and its corresponding space. Permission to create comments in the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Delete inline comment",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}inline-comments/:comment-id",
              "query": [],
              "variable": [
                {
                  "key": "comment-id",
                  "value": "{{comment-id}}",
                  "description": "The ID of the comment to be deleted.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Deletes an inline comment. This is a permanent deletion and cannot be reverted.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blogpost and its corresponding space. Permission to delete comments in the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get children inline comments",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}inline-comments/:id/children",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format type to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of footer comments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the parent comment for which inline comment children should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the children inline comments of specific comment. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Content",
      "description": "",
      "item": [
        {
          "name": "Convert content ids to content types",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}content/convert-ids-to-types",
              "query": [],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Converts a list of content ids into their associated content types. This is useful for users migrating from v1 to v2\nwho may have stored just content ids without their associated type. This will return types as they should be used in v2.\nNotably, this will return `inline-comment` for inline comments and `footer-comment` for footer comments, which is distinct from them\nboth being represented by `comment` in v1.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the requested content. Any content that the user does not have permission to view or does not exist will map to `null` in the response.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Content Properties",
      "description": "",
      "item": [
        {
          "name": "Get content properties for attachment",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}attachments/:attachment-id/properties",
              "query": [
                {
                  "key": "key",
                  "value": "{{key}}",
                  "disabled": true,
                  "description": "Filters the response to return a specific content property with matching key (case sensitive)."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "attachment-id",
                  "value": "{{attachment-id}}",
                  "description": "The ID of the attachment for which content properties should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves all Content Properties tied to a specified attachment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the attachment.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create content property for attachment",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}attachments/:attachment-id/properties",
              "query": [],
              "variable": [
                {
                  "key": "attachment-id",
                  "value": "{{attachment-id}}",
                  "description": "The ID of the attachment to create a property for.",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Creates a new content property for an attachment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the attachment.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get content property for attachment by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}attachments/:attachment-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "attachment-id",
                  "value": "{{attachment-id}}",
                  "description": "The ID of the attachment for which content properties should be returned.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the content property to be returned",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves a specific Content Property by ID that is attached to a specified attachment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the attachment.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update content property for attachment by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}attachments/:attachment-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "attachment-id",
                  "value": "{{attachment-id}}",
                  "description": "The ID of the attachment the property belongs to.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property to be updated.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a content property for attachment by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the attachment.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Delete content property for attachment by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}attachments/:attachment-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "attachment-id",
                  "value": "{{attachment-id}}",
                  "description": "The ID of the attachment the property belongs to.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property to be deleted.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Deletes a content property for an attachment by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to attachment the page.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get content properties for blog post",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:blogpost-id/properties",
              "query": [
                {
                  "key": "key",
                  "value": "{{key}}",
                  "disabled": true,
                  "description": "Filters the response to return a specific content property with matching key (case sensitive)."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "blogpost-id",
                  "value": "{{blogpost-id}}",
                  "description": "The ID of the blog post for which content properties should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves all Content Properties tied to a specified blog post.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the blog post.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create content property for blog post",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:blogpost-id/properties",
              "query": [],
              "variable": [
                {
                  "key": "blogpost-id",
                  "value": "{{blogpost-id}}",
                  "description": "The ID of the blog post to create a property for.",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Creates a new property for a blogpost.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the blog post.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get content property for blog post by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:blogpost-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "blogpost-id",
                  "value": "{{blogpost-id}}",
                  "description": "The ID of the blog post for which content properties should be returned.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property being requested",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves a specific Content Property by ID that is attached to a specified blog post.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the blog post.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update content property for blog post by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:blogpost-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "blogpost-id",
                  "value": "{{blogpost-id}}",
                  "description": "The ID of the blog post the property belongs to.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property to be updated.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a content property for blog post by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the blog post.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Delete content property for blogpost by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:blogpost-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "blogpost-id",
                  "value": "{{blogpost-id}}",
                  "description": "The ID of the blog post the property belongs to.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property to be deleted.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Deletes a content property for a blogpost by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the blog post.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get content properties for custom content",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}custom-content/:custom-content-id/properties",
              "query": [
                {
                  "key": "key",
                  "value": "{{key}}",
                  "disabled": true,
                  "description": "Filters the response to return a specific content property with matching key (case sensitive)."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "custom-content-id",
                  "value": "{{custom-content-id}}",
                  "description": "The ID of the custom content for which content properties should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves Content Properties tied to a specified custom content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the custom content.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create content property for custom content",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}custom-content/:custom-content-id/properties",
              "query": [],
              "variable": [
                {
                  "key": "custom-content-id",
                  "value": "{{custom-content-id}}",
                  "description": "The ID of the custom content to create a property for.",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Creates a new content property for a piece of custom content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the custom content.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get content property for custom content by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}custom-content/:custom-content-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "custom-content-id",
                  "value": "{{custom-content-id}}",
                  "description": "The ID of the custom content for which content properties should be returned.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the content property being requested.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves a specific Content Property by ID that is attached to a specified custom content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the page.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update content property for custom content by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}custom-content/:custom-content-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "custom-content-id",
                  "value": "{{custom-content-id}}",
                  "description": "The ID of the custom content the property belongs to.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property to be updated.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a content property for a piece of custom content by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the custom content.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Delete content property for custom content by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}custom-content/:custom-content-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "custom-content-id",
                  "value": "{{custom-content-id}}",
                  "description": "The ID of the custom content the property belongs to.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property to be deleted.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Deletes a content property for a piece of custom content by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the custom content.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get content properties for page",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:page-id/properties",
              "query": [
                {
                  "key": "key",
                  "value": "{{key}}",
                  "disabled": true,
                  "description": "Filters the response to return a specific content property with matching key (case sensitive)."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "page-id",
                  "value": "{{page-id}}",
                  "description": "The ID of the page for which content properties should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves Content Properties tied to a specified page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the page.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create content property for page",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:page-id/properties",
              "query": [],
              "variable": [
                {
                  "key": "page-id",
                  "value": "{{page-id}}",
                  "description": "The ID of the page to create a property for.",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Creates a new content property for a page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the page.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get content property for page by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:page-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "page-id",
                  "value": "{{page-id}}",
                  "description": "The ID of the page for which content properties should be returned.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the content property being requested.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves a specific Content Property by ID that is attached to a specified page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the page.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update content property for page by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:page-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "page-id",
                  "value": "{{page-id}}",
                  "description": "The ID of the page the property belongs to.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property to be updated.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a content property for a page by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the page.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Delete content property for page by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:page-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "page-id",
                  "value": "{{page-id}}",
                  "description": "The ID of the page the property belongs to.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property to be deleted.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Deletes a content property for a page by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the page.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get content properties for whiteboard",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}whiteboards/:id/properties",
              "query": [
                {
                  "key": "key",
                  "value": "{{key}}",
                  "disabled": true,
                  "description": "Filters the response to return a specific content property with matching key (case sensitive)."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the whiteboard for which content properties should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves Content Properties tied to a specified whiteboard.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the whiteboard.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create content property for whiteboard",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}whiteboards/:id/properties",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the whiteboard to create a property for.",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Creates a new content property for a whiteboard.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the whiteboard.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get content property for whiteboard by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}whiteboards/:whiteboard-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "whiteboard-id",
                  "value": "{{whiteboard-id}}",
                  "description": "The ID of the whiteboard for which content properties should be returned.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the content property being requested.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves a specific Content Property by ID that is attached to a specified whiteboard.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the whiteboard.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update content property for whiteboard by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}whiteboards/:whiteboard-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "whiteboard-id",
                  "value": "{{whiteboard-id}}",
                  "description": "The ID of the whiteboard the property belongs to.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property to be updated.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a content property for a whiteboard by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the whiteboard.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Delete content property for whiteboard by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}whiteboards/:whiteboard-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "whiteboard-id",
                  "value": "{{whiteboard-id}}",
                  "description": "The ID of the whiteboard the property belongs to.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property to be deleted.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Deletes a content property for a whiteboard by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the whiteboard.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get content properties for database",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}databases/:id/properties",
              "query": [
                {
                  "key": "key",
                  "value": "{{key}}",
                  "disabled": true,
                  "description": "Filters the response to return a specific content property with matching key (case sensitive)."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the database for which content properties should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves Content Properties tied to a specified database.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the database.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create content property for database",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}databases/:id/properties",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the database to create a property for.",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Creates a new content property for a database.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the database.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get content property for database by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}databases/:database-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "database-id",
                  "value": "{{database-id}}",
                  "description": "The ID of the database for which content properties should be returned.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the content property being requested.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves a specific Content Property by ID that is attached to a specified database.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the database.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update content property for database by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}databases/:database-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "database-id",
                  "value": "{{database-id}}",
                  "description": "The ID of the database the property belongs to.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property to be updated.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a content property for a database by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the database.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Delete content property for database by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}databases/:database-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "database-id",
                  "value": "{{database-id}}",
                  "description": "The ID of the database the property belongs to.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property to be deleted.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Deletes a content property for a database by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the database.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get content properties for Smart Link in the content tree",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}embeds/:id/properties",
              "query": [
                {
                  "key": "key",
                  "value": "{{key}}",
                  "disabled": true,
                  "description": "Filters the response to return a specific content property with matching key (case sensitive)."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of Smart Links per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Smart Link in the content tree for which content properties should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves Content Properties tied to a specified Smart Link in the content tree.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the Smart Link in the content tree.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create content property for Smart Link in the content tree",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}embeds/:id/properties",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Smart Link in the content tree to create a property for.",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Creates a new content property for a Smart Link in the content tree.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the Smart Link in the content tree.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get content property for Smart Link in the content tree by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}embeds/:embed-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "embed-id",
                  "value": "{{embed-id}}",
                  "description": "The ID of the Smart Link in the content tree for which content properties should be returned.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the content property being requested.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves a specific Content Property by ID that is attached to a specified Smart Link in the content tree.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the Smart Link in the content tree.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update content property for Smart Link in the content tree by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}embeds/:embed-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "embed-id",
                  "value": "{{embed-id}}",
                  "description": "The ID of the Smart Link in the content tree the property belongs to.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property to be updated.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a content property for a Smart Link in the content tree by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the Smart Link in the content tree.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Delete content property for Smart Link in the content tree by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}embeds/:embed-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "embed-id",
                  "value": "{{embed-id}}",
                  "description": "The ID of the Smart Link in the content tree the property belongs to.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property to be deleted.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Deletes a content property for a Smart Link in the content tree by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the Smart Link in the content tree.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get content properties for folder",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}folders/:id/properties",
              "query": [
                {
                  "key": "key",
                  "value": "{{key}}",
                  "disabled": true,
                  "description": "Filters the response to return a specific content property with matching key (case sensitive)."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the folder for which content properties should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves Content Properties tied to a specified folder.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the folder.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create content property for folder",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}folders/:id/properties",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the folder to create a property for.",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Creates a new content property for a folder.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the folder.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get content property for folder by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}folders/:folder-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "folder-id",
                  "value": "{{folder-id}}",
                  "description": "The ID of the folder for which content properties should be returned.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the content property being requested.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves a specific Content Property by ID that is attached to a specified folder.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the folder.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update content property for folder by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}folders/:folder-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "folder-id",
                  "value": "{{folder-id}}",
                  "description": "The ID of the folder the property belongs to.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property to be updated.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a content property for a folder by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the folder.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Delete content property for folder by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}folders/:folder-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "folder-id",
                  "value": "{{folder-id}}",
                  "description": "The ID of the folder the property belongs to.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property to be deleted.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Deletes a content property for a folder by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the folder.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get content properties for comment",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}comments/:comment-id/properties",
              "query": [
                {
                  "key": "key",
                  "value": "{{key}}",
                  "disabled": true,
                  "description": "Filters the response to return a specific content property with matching key (case sensitive)."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of attachments per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "comment-id",
                  "value": "{{comment-id}}",
                  "description": "The ID of the comment for which content properties should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves Content Properties attached to a specified comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the comment.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create content property for comment",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}comments/:comment-id/properties",
              "query": [],
              "variable": [
                {
                  "key": "comment-id",
                  "value": "{{comment-id}}",
                  "description": "The ID of the comment to create a property for.",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Creates a new content property for a comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the comment.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get content property for comment by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}comments/:comment-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "comment-id",
                  "value": "{{comment-id}}",
                  "description": "The ID of the comment for which content properties should be returned.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the content property being requested.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves a specific Content Property by ID that is attached to a specified comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the comment.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update content property for comment by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}comments/:comment-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "comment-id",
                  "value": "{{comment-id}}",
                  "description": "The ID of the comment the property belongs to.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property to be updated.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a content property for a comment by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the comment.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Delete content property for comment by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}comments/:comment-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "comment-id",
                  "value": "{{comment-id}}",
                  "description": "The ID of the comment the property belongs to.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property to be deleted.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Deletes a content property for a comment by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the comment.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Custom Content",
      "description": "",
      "item": [
        {
          "name": "Get custom content by type in blog post",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:id/custom-content",
              "query": [
                {
                  "key": "type",
                  "value": "{{type}}",
                  "disabled": false,
                  "description": "The type of custom content being requested. See: https://developer.atlassian.com/cloud/confluence/custom-content/ for additional details on custom content."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                },
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.\n\nNote: If the custom content body type is `storage`, the `storage` and `atlas_doc_format` body formats are able to be returned. If the custom content body type is `raw`, only the `raw` body format is able to be returned."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the blog post for which custom content should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all custom content for a given type within a given blogpost. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the custom content, the container of the custom content (blog post), and the corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get custom content by type",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}custom-content",
              "query": [
                {
                  "key": "type",
                  "value": "{{type}}",
                  "disabled": false,
                  "description": "The type of custom content being requested. See: https://developer.atlassian.com/cloud/confluence/custom-content/ for additional details on custom content."
                },
                {
                  "key": "id",
                  "value": "{{id}}",
                  "disabled": true,
                  "description": "Filter the results based on custom content ids. Multiple custom content ids can be specified as a comma-separated list."
                },
                {
                  "key": "space-id",
                  "value": "{{space-id}}",
                  "disabled": true,
                  "description": "Filter the results based on space ids. Multiple space ids can be specified as a comma-separated list."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                },
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.\n\nNote: If the custom content body type is `storage`, the `storage` and `atlas_doc_format` body formats are able to be returned. If the custom content body type is `raw`, only the `raw` body format is able to be returned."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all custom content for a given type. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the custom content, the container of the custom content, and the corresponding space (if different from the container).",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create custom content",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}custom-content",
              "query": [],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "Creates a new custom content in the given space, page, blogpost or other custom content.\n\nOnly one of `spaceId`, `pageId`, `blogPostId`, or `customContentId` is required in the request body.\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blogpost and its corresponding space. Permission to create custom content in the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get custom content by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}custom-content/:id",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.\n\nNote: If the custom content body type is `storage`, the `storage` and `atlas_doc_format` body formats are able to be returned. If the custom content body type is `raw`, only the `raw` body format is able to be returned."
                },
                {
                  "key": "version",
                  "value": "{{version}}",
                  "disabled": true,
                  "description": "Allows you to retrieve a previously published version. Specify the previous version's number to retrieve its details."
                },
                {
                  "key": "include-labels",
                  "value": "{{include-labels}}",
                  "disabled": true,
                  "description": "Includes labels associated with this custom content in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-properties",
                  "value": "{{include-properties}}",
                  "disabled": true,
                  "description": "Includes content properties associated with this custom content in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-operations",
                  "value": "{{include-operations}}",
                  "disabled": true,
                  "description": "Includes operations associated with this custom content in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-versions",
                  "value": "{{include-versions}}",
                  "disabled": true,
                  "description": "Includes versions associated with this custom content in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-version",
                  "value": "{{include-version}}",
                  "disabled": true,
                  "description": "Includes the current version associated with this custom content in the response.\nBy default this is included and can be omitted by setting the value to `false`."
                },
                {
                  "key": "include-collaborators",
                  "value": "{{include-collaborators}}",
                  "disabled": true,
                  "description": "Includes collaborators on the custom content."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the custom content to be returned. If you don't know the custom content ID, use Get Custom Content by Type and filter the results.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns a specific piece of custom content. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the custom content, the container of the custom content, and the corresponding space (if different from the container).",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update custom content",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}custom-content/:id",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the custom content to be updated. If you don't know the custom content ID, use Get Custom Content by Type and filter the results.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a custom content by id.\nAt most one of `spaceId`, `pageId`, `blogPostId`, or `customContentId` is allowed in the request body.\nNote that if `spaceId` is specified, it must be the same as the `spaceId` used for creating the custom content\nas moving custom content to a different space is not supported.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blogpost and its corresponding space. Permission to update custom content in the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Delete custom content",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}custom-content/:id",
              "query": [
                {
                  "key": "purge",
                  "value": "{{purge}}",
                  "disabled": true,
                  "description": "If attempting to purge the custom content."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the custom content to be deleted.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a custom content by id.\n\nDeleting a custom content will either move it to the trash or permanently delete it (purge it), depending on the apiSupport.\nTo permanently delete a **trashed** custom content, the endpoint must be called with the following param `purge=true`.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blogpost and its corresponding space.\nPermission to delete custom content in the space.\nPermission to administer the space (if attempting to purge).",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get custom content by type in page",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:id/custom-content",
              "query": [
                {
                  "key": "type",
                  "value": "{{type}}",
                  "disabled": false,
                  "description": "The type of custom content being requested. See: https://developer.atlassian.com/cloud/confluence/custom-content/ for additional details on custom content."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                },
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.\n\nNote: If the custom content body type is `storage`, the `storage` and `atlas_doc_format` body formats are able to be returned. If the custom content body type is `raw`, only the `raw` body format is able to be returned."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the page for which custom content should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all custom content for a given type within a given page. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the custom content, the container of the custom content (page), and the corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get custom content by type in space",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}spaces/:id/custom-content",
              "query": [
                {
                  "key": "type",
                  "value": "{{type}}",
                  "disabled": false,
                  "description": "The type of custom content being requested. See: https://developer.atlassian.com/cloud/confluence/custom-content/ for additional details on custom content."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                },
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.\n\nNote: If the custom content body type is `storage`, the `storage` and `atlas_doc_format` body formats are able to be returned. If the custom content body type is `raw`, only the `raw` body format is able to be returned."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the space for which custom content should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all custom content for a given type within a given space. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the custom content and the corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Database",
      "description": "",
      "item": [
        {
          "name": "Create database",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}databases",
              "query": [
                {
                  "key": "private",
                  "value": "{{private}}",
                  "disabled": true,
                  "description": "The database will be private. Only the user who creates this database will have permission to view and edit one."
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Creates a database in the space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the corresponding space. Permission to create a database in the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get database by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}databases/:id",
              "query": [
                {
                  "key": "include-collaborators",
                  "value": "{{include-collaborators}}",
                  "disabled": true,
                  "description": "Includes collaborators on the database."
                },
                {
                  "key": "include-direct-children",
                  "value": "{{include-direct-children}}",
                  "disabled": true,
                  "description": "Includes direct children of the database, as defined in the `ChildrenResponse` object."
                },
                {
                  "key": "include-operations",
                  "value": "{{include-operations}}",
                  "disabled": true,
                  "description": "Includes operations associated with this database in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-properties",
                  "value": "{{include-properties}}",
                  "disabled": true,
                  "description": "Includes content properties associated with this database in the response.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the database to be returned",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns a specific database.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the database and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete database",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}databases/:id",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the database to be deleted.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a database by id.\n\nDeleting a database moves the database to the trash, where it can be restored later\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the database and its corresponding space.\nPermission to delete databases in the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Data Policies",
      "description": "",
      "item": [
        {
          "name": "Get data policy metadata for the workspace",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}data-policies/metadata",
              "query": [],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns data policy metadata for the workspace.\n\n**[Permissions](#permissions) required:**\nOnly apps can make this request.\nPermission to access the Confluence site ('Can use' global permission).",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get spaces with data policies",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}data-policies/spaces",
              "query": [
                {
                  "key": "ids",
                  "value": "{{ids}}",
                  "disabled": true,
                  "description": "Filter the results to spaces based on their IDs. Multiple IDs can be specified as a comma-separated list."
                },
                {
                  "key": "keys",
                  "value": "{{keys}}",
                  "disabled": true,
                  "description": "Filter the results to spaces based on their keys. Multiple keys can be specified as a comma-separated list."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of spaces per result to return. If more results exist, use the `Link` response header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all spaces. The results will be sorted by id ascending. The number of results is limited by the `limit` parameter and\nadditional results (if available) will be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nOnly apps can make this request.\nPermission to access the Confluence site ('Can use' global permission).\nOnly spaces that the app has permission to view will be returned.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Descendants",
      "description": "",
      "item": [
        {
          "name": "Get descendants of a whiteboard",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}whiteboards/:id/descendants",
              "query": [
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of items per result to return. If more results exist, call the endpoint with the cursor to fetch the next set of results."
                },
                {
                  "key": "depth",
                  "value": "{{depth}}",
                  "disabled": true,
                  "description": "Maximum depth of descendants to return. If more results are required, use the endpoint corresponding to the content type of the deepest descendant to fetch more descendants."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the whiteboard.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns descendants in the content tree for a given whiteboard by ID in top-to-bottom order (that is, the highest descendant is the first\nitem in the response payload). The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available by calling this endpoint with the cursor in the response payload. There is also a `depth` parameter specifying depth\nof descendants to be fetched.\n\nThe following types of content will be returned:\n- Database\n- Embed\n- Folder\n- Page\n- Whiteboard\n\nThis endpoint returns minimal information about each descendant. To fetch more details, use a related endpoint based on the content type, such\nas:\n\n- [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get)\n- [Get embed by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get)\n- [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-folder/#api-folders-id-get)\n- [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get)\n- [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nPermission to view the whiteboard and its corresponding space",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get descendants of a database",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}databases/:id/descendants",
              "query": [
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of items per result to return. If more results exist, call the endpoint with the cursor to fetch the next set of results."
                },
                {
                  "key": "depth",
                  "value": "{{depth}}",
                  "disabled": true,
                  "description": "Maximum depth of descendants to return. If more results are required, use the endpoint corresponding to the content type of the deepest descendant to fetch more descendants."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the database.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns descendants in the content tree for a given database by ID in top-to-bottom order (that is, the highest descendant is the first\nitem in the response payload). The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available by calling this endpoint with the cursor in the response payload. There is also a `depth` parameter specifying depth\nof descendants to be fetched.\n\nThe following types of content will be returned:\n- Database\n- Embed\n- Folder\n- Page\n- Whiteboard\n\nThis endpoint returns minimal information about each descendant. To fetch more details, use a related endpoint based on the content type, such\nas:\n\n- [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get)\n- [Get embed by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get)\n- [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-folder/#api-folders-id-get)\n- [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get)\n- [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nPermission to view the database and its corresponding space",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get descendants of a smart link",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}embeds/:id/descendants",
              "query": [
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of items per result to return. If more results exist, call the endpoint with the cursor to fetch the next set of results."
                },
                {
                  "key": "depth",
                  "value": "{{depth}}",
                  "disabled": true,
                  "description": "Maximum depth of descendants to return. If more results are required, use the endpoint corresponding to the content type of the deepest descendant to fetch more descendants."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the smart link.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns descendants in the content tree for a given smart link by ID in top-to-bottom order (that is, the highest descendant is the first\nitem in the response payload). The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available by calling this endpoint with the cursor in the response payload. There is also a `depth` parameter specifying depth\nof descendants to be fetched.\n\nThe following types of content will be returned:\n- Database\n- Embed\n- Folder\n- Page\n- Whiteboard\n\n\nThis endpoint returns minimal information about each descendant. To fetch more details, use a related endpoint based on the content type, such\nas:\n\n- [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get)\n- [Get embed by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get)\n- [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-folder/#api-folders-id-get)\n- [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get)\n- [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nPermission to view the smart link and its corresponding space",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get descendants of folder",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}folders/:id/descendants",
              "query": [
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of items per result to return. If more results exist, call the endpoint with the cursor to fetch the next set of results."
                },
                {
                  "key": "depth",
                  "value": "{{depth}}",
                  "disabled": true,
                  "description": "Maximum depth of descendants to return. If more results are required, use the endpoint corresponding to the content type of the deepest descendant to fetch more descendants."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the folder.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns descendants in the content tree for a given folder by ID in top-to-bottom order (that is, the highest descendant is the first\nitem in the response payload). The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available by calling this endpoint with the cursor in the response payload. There is also a `depth` parameter specifying depth\nof descendants to be fetched.\n\nThe following types of content will be returned:\n- Database\n- Embed\n- Folder\n- Page\n- Whiteboard\n\nThis endpoint returns minimal information about each descendant. To fetch more details, use a related endpoint based on the content type, such\nas:\n\n- [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get)\n- [Get embed by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get)\n- [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-folder/#api-folders-id-get)\n- [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get)\n- [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nPermission to view the  and its corresponding space",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get descendants of page",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:id/descendants",
              "query": [
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of items per result to return. If more results exist, call the endpoint with the cursor to fetch the next set of results."
                },
                {
                  "key": "depth",
                  "value": "{{depth}}",
                  "disabled": true,
                  "description": "Maximum depth of descendants to return. If more results are required, use the endpoint corresponding to the content type of the deepest descendant to fetch more descendants."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the page.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns descendants in the content tree for a given page by ID in top-to-bottom order (that is, the highest descendant is the first\nitem in the response payload). The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available by calling this endpoint with the cursor in the response payload. There is also a `depth` parameter specifying depth\nof descendants to be fetched.\n\nThe following types of content will be returned:\n- Database\n- Embed\n- Folder\n- Page\n- Whiteboard\n\nThis endpoint returns minimal information about each descendant. To fetch more details, use a related endpoint based on the content type, such\nas:\n\n- [Get database by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-database/#api-databases-id-get)\n- [Get embed by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-smart-link/#api-embeds-id-get)\n- [Get folder by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-folder/#api-folders-id-get)\n- [Get page by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-page/#api-pages-id-get)\n- [Get whiteboard by id](https://developer.atlassian.com/cloud/confluence/rest/v2/api-group-whiteboard/#api-whiteboards-id-get).\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nPermission to view the page and its corresponding space",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Folder",
      "description": "",
      "item": [
        {
          "name": "Create folder",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}folders",
              "query": [],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Creates a folder in the space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the corresponding space. Permission to create a folder in the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get folder by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}folders/:id",
              "query": [
                {
                  "key": "include-collaborators",
                  "value": "{{include-collaborators}}",
                  "disabled": true,
                  "description": "Includes collaborators on the folder."
                },
                {
                  "key": "include-direct-children",
                  "value": "{{include-direct-children}}",
                  "disabled": true,
                  "description": "Includes direct children of the folder, as defined in the `ChildrenResponse` object."
                },
                {
                  "key": "include-operations",
                  "value": "{{include-operations}}",
                  "disabled": true,
                  "description": "Includes operations associated with this folder in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-properties",
                  "value": "{{include-properties}}",
                  "disabled": true,
                  "description": "Includes content properties associated with this folder in the response.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the folder to be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns a specific folder.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the folder and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete folder",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}folders/:id",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the folder to be deleted.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a folder by id.\n\nDeleting a folder moves the folder to the trash, where it can be restored later\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the folder and its corresponding space.\nPermission to delete folders in the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Label",
      "description": "",
      "item": [
        {
          "name": "Get labels for attachment",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}attachments/:id/labels",
              "query": [
                {
                  "key": "prefix",
                  "value": "{{prefix}}",
                  "disabled": true,
                  "description": "Filter the results to labels based on their prefix."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of labels per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the attachment for which labels should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the labels of specific attachment. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the parent content of the attachment and its corresponding space.\nOnly labels that the user has permission to view will be returned.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get labels for blog post",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:id/labels",
              "query": [
                {
                  "key": "prefix",
                  "value": "{{prefix}}",
                  "disabled": true,
                  "description": "Filter the results to labels based on their prefix."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of labels per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the blog post for which labels should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the labels of specific blog post. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the blog post and its corresponding space.\nOnly labels that the user has permission to view will be returned.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get labels for custom content",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}custom-content/:id/labels",
              "query": [
                {
                  "key": "prefix",
                  "value": "{{prefix}}",
                  "disabled": true,
                  "description": "Filter the results to labels based on their prefix."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of labels per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the custom content for which labels should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the labels for a specific piece of custom content. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the custom content and its corresponding space.\nOnly labels that the user has permission to view will be returned.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get labels",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}labels",
              "query": [
                {
                  "key": "label-id",
                  "value": "{{label-id}}",
                  "disabled": true,
                  "description": "Filters on label ID. Multiple IDs can be specified as a comma-separated list."
                },
                {
                  "key": "prefix",
                  "value": "{{prefix}}",
                  "disabled": true,
                  "description": "Filters on label prefix. Multiple IDs can be specified as a comma-separated list."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of labels per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all labels. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly labels that the user has permission to view will be returned.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get labels for page",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:id/labels",
              "query": [
                {
                  "key": "prefix",
                  "value": "{{prefix}}",
                  "disabled": true,
                  "description": "Filter the results to labels based on their prefix."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of labels per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the page for which labels should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the labels of specific page. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.\nOnly labels that the user has permission to view will be returned.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get labels for space",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}spaces/:id/labels",
              "query": [
                {
                  "key": "prefix",
                  "value": "{{prefix}}",
                  "disabled": true,
                  "description": "Filter the results to labels based on their prefix."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of labels per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the space for which labels should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the labels of specific space. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the space.\nOnly labels that the user has permission to view will be returned.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get labels for space content",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}spaces/:id/content/labels",
              "query": [
                {
                  "key": "prefix",
                  "value": "{{prefix}}",
                  "disabled": true,
                  "description": "Filter the results to labels based on their prefix."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of labels per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the space for which labels should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the labels of space content (pages, blogposts etc). The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the space.\nOnly labels that the user has permission to view will be returned.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Like",
      "description": "",
      "item": [
        {
          "name": "Get like count for blog post",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:id/likes/count",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the blog post for which like count should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the count of likes of specific blog post.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the blog post and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get account IDs of likes for blog post",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:id/likes/users",
              "query": [
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of account IDs per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the blog post for which account IDs should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the account IDs of likes of specific blog post.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the blog post and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get like count for page",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:id/likes/count",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the page for which like count should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the count of likes of specific page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get account IDs of likes for page",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:id/likes/users",
              "query": [
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of account IDs per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the page for which like count should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the account IDs of likes of specific page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get like count for footer comment",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}footer-comments/:id/likes/count",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the footer comment for which like count should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the count of likes of specific footer comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page/blogpost and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get account IDs of likes for footer comment",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}footer-comments/:id/likes/users",
              "query": [
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of account IDs per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the footer comment for which like count should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the account IDs of likes of specific footer comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page/blogpost and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get like count for inline comment",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}inline-comments/:id/likes/count",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the inline comment for which like count should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the count of likes of specific inline comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page/blogpost and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get account IDs of likes for inline comment",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}inline-comments/:id/likes/users",
              "query": [
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of account IDs per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the inline comment for which like count should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the account IDs of likes of specific inline comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page/blogpost and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Operation",
      "description": "",
      "item": [
        {
          "name": "Get permitted operations for attachment",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}attachments/:id/operations",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the attachment for which operations should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the permitted operations on specific attachment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the parent content of the attachment and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get permitted operations for blog post",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:id/operations",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the blog post for which operations should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the permitted operations on specific blog post.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the parent content of the blog post and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get permitted operations for custom content",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}custom-content/:id/operations",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the custom content for which operations should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the permitted operations on specific custom content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the parent content of the custom content and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get permitted operations for page",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:id/operations",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the page for which operations should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the permitted operations on specific page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the parent content of the page and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get permitted operations for a whiteboard",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}whiteboards/:id/operations",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the whiteboard for which operations should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the permitted operations on specific whiteboard.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the whiteboard and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get permitted operations for a database",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}databases/:id/operations",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the database for which operations should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the permitted operations on specific database.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the database and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get permitted operations for a Smart Link in the content tree",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}embeds/:id/operations",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Smart Link in the content tree for which operations should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the permitted operations on specific Smart Link in the content tree.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the Smart Link in the content tree and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get permitted operations for a folder",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}folders/:id/operations",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the folder for which operations should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the permitted operations on specific folder.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the folder and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get permitted operations for space",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}spaces/:id/operations",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the space for which operations should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the permitted operations on specific space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get permitted operations for footer comment",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}footer-comments/:id/operations",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the footer comment for which operations should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the permitted operations on specific footer comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the parent content of the footer comment and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get permitted operations for inline comment",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}inline-comments/:id/operations",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the inline comment for which operations should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the permitted operations on specific inline comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the parent content of the inline comment and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Page",
      "description": "",
      "item": [
        {
          "name": "Get pages for label",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}labels/:id/pages",
              "query": [
                {
                  "key": "space-id",
                  "value": "{{space-id}}",
                  "disabled": true,
                  "description": "Filter the results based on space ids. Multiple space ids can be specified as a comma-separated list."
                },
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the label for which pages should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the pages of specified label. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get pages",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages",
              "query": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "disabled": true,
                  "description": "Filter the results based on page ids. Multiple page ids can be specified as a comma-separated list."
                },
                {
                  "key": "space-id",
                  "value": "{{space-id}}",
                  "disabled": true,
                  "description": "Filter the results based on space ids. Multiple space ids can be specified as a comma-separated list."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "status",
                  "value": "{{status}}",
                  "disabled": true,
                  "description": "Filter the results to pages based on their status. By default, `current` and `archived` are used."
                },
                {
                  "key": "title",
                  "value": "{{title}}",
                  "disabled": true,
                  "description": "Filter the results to pages based on their title."
                },
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "subtype",
                  "value": "{{subtype}}",
                  "disabled": true,
                  "description": "Filter the results to pages based on their subtype."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all pages. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly pages that the user has permission to view will be returned.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create page",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages",
              "query": [
                {
                  "key": "embedded",
                  "value": "{{embedded}}",
                  "disabled": true,
                  "description": "Tag the content as embedded and content will be created in NCS."
                },
                {
                  "key": "private",
                  "value": "{{private}}",
                  "disabled": true,
                  "description": "The page will be private. Only the user who creates this page will have permission to view and edit one."
                },
                {
                  "key": "root-level",
                  "value": "{{root-level}}",
                  "disabled": true,
                  "description": "The page will be created at the root level of the space (outside the space homepage tree). If true, then a \nvalue may not be supplied for the `parentId` body parameter."
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Creates a page in the space.\n\nPages are created as published by default unless specified as a draft in the status field. If creating a published page, the title must be specified.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the corresponding space. Permission to create a page in the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get page by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:id",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "get-draft",
                  "value": "{{get-draft}}",
                  "disabled": true,
                  "description": "Retrieve the draft version of this page."
                },
                {
                  "key": "status",
                  "value": "{{status}}",
                  "disabled": true,
                  "description": "Filter the page being retrieved by its status."
                },
                {
                  "key": "version",
                  "value": "{{version}}",
                  "disabled": true,
                  "description": "Allows you to retrieve a previously published version. Specify the previous version's number to retrieve its details."
                },
                {
                  "key": "include-labels",
                  "value": "{{include-labels}}",
                  "disabled": true,
                  "description": "Includes labels associated with this page in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-properties",
                  "value": "{{include-properties}}",
                  "disabled": true,
                  "description": "Includes content properties associated with this page in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-operations",
                  "value": "{{include-operations}}",
                  "disabled": true,
                  "description": "Includes operations associated with this page in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-likes",
                  "value": "{{include-likes}}",
                  "disabled": true,
                  "description": "Includes likes associated with this page in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-versions",
                  "value": "{{include-versions}}",
                  "disabled": true,
                  "description": "Includes versions associated with this page in the response.\nThe number of results will be limited to 50 and sorted in the default sort order. \nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-version",
                  "value": "{{include-version}}",
                  "disabled": true,
                  "description": "Includes the current version associated with this page in the response.\nBy default this is included and can be omitted by setting the value to `false`."
                },
                {
                  "key": "include-favorited-by-current-user-status",
                  "value": "{{include-favorited-by-current-user-status}}",
                  "disabled": true,
                  "description": "Includes whether this page has been favorited by the current user."
                },
                {
                  "key": "include-webresources",
                  "value": "{{include-webresources}}",
                  "disabled": true,
                  "description": "Includes web resources that can be used to render page content on a client."
                },
                {
                  "key": "include-collaborators",
                  "value": "{{include-collaborators}}",
                  "disabled": true,
                  "description": "Includes collaborators on the page."
                },
                {
                  "key": "include-direct-children",
                  "value": "{{include-direct-children}}",
                  "disabled": true,
                  "description": "Includes direct children of the page, as defined in the `ChildrenResponse` object."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the page to be returned. If you don't know the page ID, use Get pages and filter the results.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns a specific page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the page and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update page",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:id",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the page to be updated. If you don't know the page ID, use Get Pages and filter the results.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a page by id.\n\nWhen the \"current\" version is updated, the provided body content is considered as the latest version. This latest body content\nwill be attempted to be merged into the draft version through a content reconciliation algorithm. If two versions are significantly diverged, \nthe latest provided content may entirely override what was previously in the draft. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the page and its corresponding space. Permission to update pages in the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Delete page",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:id",
              "query": [
                {
                  "key": "purge",
                  "value": "{{purge}}",
                  "disabled": true,
                  "description": "If attempting to purge the page."
                },
                {
                  "key": "draft",
                  "value": "{{draft}}",
                  "disabled": true,
                  "description": "If attempting to delete a page that is a draft."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the page to be deleted.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a page by id.\n\nBy default this will delete pages that are non-drafts. To delete a page that is a draft, the endpoint must be called on a \ndraft with the following param `draft=true`. Discarded drafts are not sent to the trash and are permanently deleted.\n\nDeleting a page moves the page to the trash, where it can be restored later. To permanently delete a page (or \"purge\" it),\nthe endpoint must be called on a **trashed** page with the following param `purge=true`.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the page and its corresponding space.\nPermission to delete pages in the space.\nPermission to administer the space (if attempting to purge).",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update page title",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:id/title",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the page to be updated. If you don't know the page ID, use Get Pages and filter the results",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Updates the title of a specified page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the page and its corresponding space. Permission to update pages in the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get pages in space",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}spaces/:id/pages",
              "query": [
                {
                  "key": "depth",
                  "value": "{{depth}}",
                  "disabled": true,
                  "description": "Filter the results to pages at the root level of the space or to all pages in the space."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "status",
                  "value": "{{status}}",
                  "disabled": true,
                  "description": "Filter the results to pages based on their status. By default, `current` and `archived` are used."
                },
                {
                  "key": "title",
                  "value": "{{title}}",
                  "disabled": true,
                  "description": "Filter the results to pages based on their title."
                },
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the space for which pages should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all pages in a space. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission) and 'View' permission for the space.\nOnly pages that the user has permission to view will be returned.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Redactions",
      "description": "",
      "item": [
        {
          "name": "Redact Content in a Confluence Page",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:id/redact",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the page to redact content from.",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "Redacts sensitive content in a Confluence page by replacing specified text ranges with redaction markers. \nEach redaction in the response includes a unique UUID for restoration (except code block redactions). \nThe response metadata items maintain the same order as the input redaction pointers, and completely \noverlapping redactions are merged into a single redaction with one UUID.\n\n**Note**: This endpoint requires **Atlassian Guard Premium**.\n",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Redact Content in a Confluence Blog Post",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:id/redact",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the blog post to redact content from.",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "Redacts sensitive content in a Confluence blog post by replacing specified text ranges with redaction markers. \nEach redaction in the response includes a unique UUID for restoration (except code block redactions). \nThe response metadata items maintain the same order as the input redaction pointers, and completely \noverlapping redactions are merged into a single redaction with one UUID.\n\n**Note**: This endpoint requires **Atlassian Guard Premium**.\n",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Smart Link",
      "description": "",
      "item": [
        {
          "name": "Create Smart Link in the content tree",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}embeds",
              "query": [],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Creates a Smart Link in the content tree in the space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the corresponding space. Permission to create a Smart Link in the content tree in the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get Smart Link in the content tree by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}embeds/:id",
              "query": [
                {
                  "key": "include-collaborators",
                  "value": "{{include-collaborators}}",
                  "disabled": true,
                  "description": "Includes collaborators on the Smart Link."
                },
                {
                  "key": "include-direct-children",
                  "value": "{{include-direct-children}}",
                  "disabled": true,
                  "description": "Includes direct children of the Smart Link, as defined in the `ChildrenResponse` object."
                },
                {
                  "key": "include-operations",
                  "value": "{{include-operations}}",
                  "disabled": true,
                  "description": "Includes operations associated with this Smart Link in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-properties",
                  "value": "{{include-properties}}",
                  "disabled": true,
                  "description": "Includes content properties associated with this Smart Link in the response.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Smart Link in the content tree to be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns a specific Smart Link in the content tree.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the Smart Link in the content tree and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete Smart Link in the content tree",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}embeds/:id",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the Smart Link in the content tree to be deleted.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a Smart Link in the content tree by id.\n\nDeleting a Smart Link in the content tree moves the Smart Link to the trash, where it can be restored later\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the Smart Link in the content tree and its corresponding space.\nPermission to delete Smart Links in the content tree in the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Space",
      "description": "",
      "item": [
        {
          "name": "Get spaces",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}spaces",
              "query": [
                {
                  "key": "ids",
                  "value": "{{ids}}",
                  "disabled": true,
                  "description": "Filter the results to spaces based on their IDs. Multiple IDs can be specified as a comma-separated list."
                },
                {
                  "key": "keys",
                  "value": "{{keys}}",
                  "disabled": true,
                  "description": "Filter the results to spaces based on their keys. Multiple keys can be specified as a comma-separated list."
                },
                {
                  "key": "type",
                  "value": "{{type}}",
                  "disabled": true,
                  "description": "Filter the results to spaces based on their type."
                },
                {
                  "key": "status",
                  "value": "{{status}}",
                  "disabled": true,
                  "description": "Filter the results to spaces based on their status."
                },
                {
                  "key": "labels",
                  "value": "{{labels}}",
                  "disabled": true,
                  "description": "Filter the results to spaces based on their labels. Multiple labels can be specified as a comma-separated list."
                },
                {
                  "key": "favorited-by",
                  "value": "{{favorited-by}}",
                  "disabled": true,
                  "description": "Filter the results to spaces favorited by the user with the specified account ID."
                },
                {
                  "key": "not-favorited-by",
                  "value": "{{not-favorited-by}}",
                  "disabled": true,
                  "description": "Filter the results to spaces NOT favorited by the user with the specified account ID."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                },
                {
                  "key": "description-format",
                  "value": "{{description-format}}",
                  "disabled": true,
                  "description": "The content format type to be returned in the `description` field of the response. If available, the representation will be available under a response field of the same name under the `description` field."
                },
                {
                  "key": "include-icon",
                  "value": "{{include-icon}}",
                  "disabled": true,
                  "description": "If the icon for the space should be fetched or not."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of spaces per result to return. If more results exist, use the `Link` response header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all spaces. The results will be sorted by id ascending. The number of results is limited by the `limit` parameter and\nadditional results (if available) will be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly spaces that the user has permission to view will be returned.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create space",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}spaces",
              "query": [],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "Creates a Space as specified in the payload.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to create spaces.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get space by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}spaces/:id",
              "query": [
                {
                  "key": "description-format",
                  "value": "{{description-format}}",
                  "disabled": true,
                  "description": "The content format type to be returned in the `description` field of the response. If available, the representation will be available under a response field of the same name under the `description` field."
                },
                {
                  "key": "include-icon",
                  "value": "{{include-icon}}",
                  "disabled": true,
                  "description": "If the icon for the space should be fetched or not."
                },
                {
                  "key": "include-operations",
                  "value": "{{include-operations}}",
                  "disabled": true,
                  "description": "Includes operations associated with this space in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-properties",
                  "value": "{{include-properties}}",
                  "disabled": true,
                  "description": "Includes space properties associated with this space in the response.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-permissions",
                  "value": "{{include-permissions}}",
                  "disabled": true,
                  "description": "Includes space permissions associated with this space in the response.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-role-assignments",
                  "value": "{{include-role-assignments}}",
                  "disabled": true,
                  "description": "Includes role assignments associated with this space in the response. This parameter is only accepted for EAP sites.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-labels",
                  "value": "{{include-labels}}",
                  "disabled": true,
                  "description": "Includes labels associated with this space in the response.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the space to be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns a specific space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Space Permissions",
      "description": "",
      "item": [
        {
          "name": "Get space permissions assignments",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}spaces/:id/permissions",
              "query": [
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of assignments to return. If more results exist, use the `Link` response header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the space to be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns space permission assignments for a specific space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get available space permissions",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}space-permissions",
              "query": [
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of space permissions to return. If more results exist, use the `Link` response header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves the available space permissions.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Space Properties",
      "description": "",
      "item": [
        {
          "name": "Get space properties in space",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}spaces/:space-id/properties",
              "query": [
                {
                  "key": "key",
                  "value": "{{key}}",
                  "disabled": true,
                  "description": "The key of the space property to retrieve. This should be used when a user knows the key of their property, but needs to retrieve the id for use in other methods."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of pages per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "space-id",
                  "value": "{{space-id}}",
                  "description": "The ID of the space for which space properties should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all properties for the given space. Space properties are a key-value storage associated with a space.\nThe limit parameter specifies the maximum number of results returned in a single response. Use the `link` response header\nto paginate through additional results.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission) and 'View' permission for the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Create space property in space",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}spaces/:space-id/properties",
              "query": [],
              "variable": [
                {
                  "key": "space-id",
                  "value": "{{space-id}}",
                  "description": "The ID of the space for which space properties should be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "Creates a new space property.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission) and 'Admin' permission for the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get space property by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}spaces/:space-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "space-id",
                  "value": "{{space-id}}",
                  "description": "The ID of the space the property belongs to.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property to be retrieved.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieve a space property by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission) and 'View' permission for the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update space property by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}spaces/:space-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "space-id",
                  "value": "{{space-id}}",
                  "description": "The ID of the space the property belongs to.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property to be updated.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a space property by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission) and 'Admin' permission for the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Delete space property by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}spaces/:space-id/properties/:property-id",
              "query": [],
              "variable": [
                {
                  "key": "space-id",
                  "value": "{{space-id}}",
                  "description": "The ID of the space the property belongs to.",
                  "disabled": false
                },
                {
                  "key": "property-id",
                  "value": "{{property-id}}",
                  "description": "The ID of the property to be deleted.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Deletes a space property by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission) and 'Admin' permission for the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Space Roles",
      "description": "",
      "item": [
        {
          "name": "Get available space roles",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}space-roles",
              "query": [
                {
                  "key": "space-id",
                  "value": "{{space-id}}",
                  "disabled": true,
                  "description": "The space ID for which to filter available space roles; if empty, return all available space roles for the tenant."
                },
                {
                  "key": "role-type",
                  "value": "{{role-type}}",
                  "disabled": true,
                  "description": "The space role type to filter results by."
                },
                {
                  "key": "principal-id",
                  "value": "{{principal-id}}",
                  "disabled": true,
                  "description": "The principal ID to filter results by. If specified, a principal-type must also be specified. Paired with a `principal-type` of `ACCESS_CLASS`, valid values include [`anonymous-users`, `jsm-project-admins`, `authenticated-users`, `all-licensed-users`, `all-product-admins`]"
                },
                {
                  "key": "principal-type",
                  "value": "{{principal-type}}",
                  "disabled": true,
                  "description": "The principal type to filter results by. If specified, a principal-id must also be specified."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of space roles to return. If more results exist, use the `Link` response header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves the available space roles.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site; if requesting a certain space's roles, permission to view the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get space role by ID",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}space-roles/:id",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the space role to retrieve.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves the space role by ID.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get space role assignments",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}spaces/:id/role-assignments",
              "query": [
                {
                  "key": "role-id",
                  "value": "{{role-id}}",
                  "disabled": true,
                  "description": "Filters the returned role assignments to the provided role ID."
                },
                {
                  "key": "role-type",
                  "value": "{{role-type}}",
                  "disabled": true,
                  "description": "Filters the returned role assignments to the provided role type."
                },
                {
                  "key": "principal-id",
                  "value": "{{principal-id}}",
                  "disabled": true,
                  "description": "Filters the returned role assignments to the provided principal id. If specified, a principal-type must also be specified. Paired with a `principal-type` of `ACCESS_CLASS`, valid values include [`anonymous-users`, `jsm-project-admins`, `authenticated-users`, `all-licensed-users`, `all-product-admins`]"
                },
                {
                  "key": "principal-type",
                  "value": "{{principal-type}}",
                  "disabled": true,
                  "description": "Filters the returned role assignments to the provided principal type. If specified, a principal-id must also be specified."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of space roles to return. If more results exist, use the `Link` response header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the space for which to retrieve assignments.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves the space role assignments.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Set space role assignments",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}spaces/:id/role-assignments",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the space for which to retrieve assignments.",
                  "disabled": false
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Sets space role assignments as specified in the payload.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to manage roles in the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Task",
      "description": "",
      "item": [
        {
          "name": "Get tasks",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}tasks",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "include-blank-tasks",
                  "value": "{{include-blank-tasks}}",
                  "disabled": true,
                  "description": "Specifies whether to include blank tasks in the response. Defaults to `true`."
                },
                {
                  "key": "status",
                  "value": "{{status}}",
                  "disabled": true,
                  "description": "Filters on the status of the task."
                },
                {
                  "key": "task-id",
                  "value": "{{task-id}}",
                  "disabled": true,
                  "description": "Filters on task ID. Multiple IDs can be specified."
                },
                {
                  "key": "space-id",
                  "value": "{{space-id}}",
                  "disabled": true,
                  "description": "Filters on the space ID of the task. Multiple IDs can be specified."
                },
                {
                  "key": "page-id",
                  "value": "{{page-id}}",
                  "disabled": true,
                  "description": "Filters on the page ID of the task. Multiple IDs can be specified. Note - page and blog post filters can be used in conjunction."
                },
                {
                  "key": "blogpost-id",
                  "value": "{{blogpost-id}}",
                  "disabled": true,
                  "description": "Filters on the blog post ID of the task. Multiple IDs can be specified. Note - page and blog post filters can be used in conjunction."
                },
                {
                  "key": "created-by",
                  "value": "{{created-by}}",
                  "disabled": true,
                  "description": "Filters on the Account ID of the user who created this task. Multiple IDs can be specified."
                },
                {
                  "key": "assigned-to",
                  "value": "{{assigned-to}}",
                  "disabled": true,
                  "description": "Filters on the Account ID of the user to whom this task is assigned. Multiple IDs can be specified."
                },
                {
                  "key": "completed-by",
                  "value": "{{completed-by}}",
                  "disabled": true,
                  "description": "Filters on the Account ID of the user who completed this task. Multiple IDs can be specified."
                },
                {
                  "key": "created-at-from",
                  "value": "{{created-at-from}}",
                  "disabled": true,
                  "description": "Filters on start of date-time range of task based on creation date (inclusive). Input is epoch time in milliseconds."
                },
                {
                  "key": "created-at-to",
                  "value": "{{created-at-to}}",
                  "disabled": true,
                  "description": "Filters on end of date-time range of task based on creation date (inclusive). Input is epoch time in milliseconds."
                },
                {
                  "key": "due-at-from",
                  "value": "{{due-at-from}}",
                  "disabled": true,
                  "description": "Filters on start of date-time range of task based on due date (inclusive). Input is epoch time in milliseconds."
                },
                {
                  "key": "due-at-to",
                  "value": "{{due-at-to}}",
                  "disabled": true,
                  "description": "Filters on end of date-time range of task based on due date (inclusive). Input is epoch time in milliseconds."
                },
                {
                  "key": "completed-at-from",
                  "value": "{{completed-at-from}}",
                  "disabled": true,
                  "description": "Filters on start of date-time range of task based on completion date (inclusive). Input is epoch time in milliseconds."
                },
                {
                  "key": "completed-at-to",
                  "value": "{{completed-at-to}}",
                  "disabled": true,
                  "description": "Filters on end of date-time range of task based on completion date (inclusive). Input is epoch time in milliseconds."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of tasks per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns all tasks. The number of results is limited by the `limit` parameter and additional results (if available)\nwill be available through the `next` URL present in the `Link` response header.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nOnly tasks that the user has permission to view will be returned.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get task by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}tasks/:id",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the task to be returned. If you don't know the task ID, use Get tasks and filter the results.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns a specific task. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the containing page or blog post and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Update task",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}tasks/:id",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the task to be updated. If you don't know the task ID, use Get tasks and filter the results.",
                  "disabled": false
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Update a task by id. This endpoint currently only supports updating task status.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to edit the containing page or blog post and view its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "User",
      "description": "",
      "item": [
        {
          "name": "Create bulk user lookup using ids",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}users-bulk",
              "query": [],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns user details for the ids provided in the request body.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).\nThe user must be able to view user profiles in the Confluence site.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Check site access for a list of emails",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}user/access/check-access-by-email",
              "query": [],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the list of emails from the input list that do not have access to site.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Invite a list of emails to the site",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}user/access/invite-by-email",
              "query": [],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "description": "Invite a list of emails to the site.\n\nIgnores all invalid emails and no action is taken for the emails that already have access to the site.\n\nNOTE: This API is asynchronous and may take some time to complete.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to access the Confluence site ('Can use' global permission).",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Version",
      "description": "",
      "item": [
        {
          "name": "Get attachment versions",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}attachments/:id/versions",
              "query": [
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of versions per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the attachment to be queried for its versions. If you don't know the attachment ID, use Get attachments and filter the results.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the versions of specific attachment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the attachment and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get version details for attachment version",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}attachments/:attachment-id/versions/:version-number",
              "query": [],
              "variable": [
                {
                  "key": "attachment-id",
                  "value": "{{attachment-id}}",
                  "description": "The ID of the attachment for which version details should be returned.",
                  "disabled": false
                },
                {
                  "key": "version-number",
                  "value": "{{version-number}}",
                  "description": "The version number of the attachment to be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves version details for the specified attachment and version number.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the attachment.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get blog post versions",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:id/versions",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of versions per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the blog post to be queried for its versions. If you don't know the blog post ID, use Get blog posts and filter the results.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the versions of specific blog post. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the blog post and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get version details for blog post version",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}blogposts/:blogpost-id/versions/:version-number",
              "query": [],
              "variable": [
                {
                  "key": "blogpost-id",
                  "value": "{{blogpost-id}}",
                  "description": "The ID of the blog post for which version details should be returned.",
                  "disabled": false
                },
                {
                  "key": "version-number",
                  "value": "{{version-number}}",
                  "description": "The version number of the blog post to be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves version details for the specified blog post and version number.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the blog post.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get page versions",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:id/versions",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of versions per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the page to be queried for its versions. If you don't know the page ID, use Get pages and filter the results.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the versions of specific page.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the page and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get version details for page version",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}pages/:page-id/versions/:version-number",
              "query": [],
              "variable": [
                {
                  "key": "page-id",
                  "value": "{{page-id}}",
                  "description": "The ID of the page for which version details should be returned.",
                  "disabled": false
                },
                {
                  "key": "version-number",
                  "value": "{{version-number}}",
                  "description": "The version number of the page to be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves version details for the specified page and version number.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the page.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get custom content versions",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}custom-content/:custom-content-id/versions",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.\n\nNote: If the custom content body type is `storage`, the `storage` and `atlas_doc_format` body formats are able to be returned. If the custom content body type is `raw`, only the `raw` body format is able to be returned."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of versions per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                }
              ],
              "variable": [
                {
                  "key": "custom-content-id",
                  "value": "{{custom-content-id}}",
                  "description": "The ID of the custom content to be queried for its versions. If you don't know the custom content ID, use Get custom-content by type and filter the results.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns the versions of specific custom content.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the custom content and its corresponding page and space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get version details for custom content version",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}custom-content/:custom-content-id/versions/:version-number",
              "query": [],
              "variable": [
                {
                  "key": "custom-content-id",
                  "value": "{{custom-content-id}}",
                  "description": "The ID of the custom content for which version details should be returned.",
                  "disabled": false
                },
                {
                  "key": "version-number",
                  "value": "{{version-number}}",
                  "description": "The version number of the custom content to be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves version details for the specified custom content and version number.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the page.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get footer comment versions",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}footer-comments/:id/versions",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of versions per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the footer comment for which versions should be returned",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves the versions of the specified footer comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blog post and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get version details for footer comment version",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}footer-comments/:id/versions/:version-number",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the footer comment for which version details should be returned.",
                  "disabled": false
                },
                {
                  "key": "version-number",
                  "value": "{{version-number}}",
                  "description": "The version number of the footer comment to be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves version details for the specified footer comment version.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blog post and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get inline comment versions",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}inline-comments/:id/versions",
              "query": [
                {
                  "key": "body-format",
                  "value": "{{body-format}}",
                  "disabled": true,
                  "description": "The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field."
                },
                {
                  "key": "cursor",
                  "value": "{{cursor}}",
                  "disabled": true,
                  "description": "Used for pagination, this opaque cursor will be returned in the `next` URL in the `Link` response header. Use the relative URL in the `Link` header to retrieve the `next` set of results."
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "disabled": true,
                  "description": "Maximum number of versions per result to return. If more results exist, use the `Link` header to retrieve a relative URL that will return the next set of results."
                },
                {
                  "key": "sort",
                  "value": "{{sort}}",
                  "disabled": true,
                  "description": "Used to sort the result by a particular field."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the inline comment for which versions should be returned",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves the versions of the specified inline comment.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blog post and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Get version details for inline comment version",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}inline-comments/:id/versions/:version-number",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the inline comment for which version details should be returned.",
                  "disabled": false
                },
                {
                  "key": "version-number",
                  "value": "{{version-number}}",
                  "description": "The version number of the inline comment to be returned.",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Retrieves version details for the specified inline comment version.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content of the page or blog post and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Whiteboard",
      "description": "",
      "item": [
        {
          "name": "Create whiteboard",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}whiteboards",
              "query": [
                {
                  "key": "private",
                  "value": "{{private}}",
                  "disabled": true,
                  "description": "The whiteboard will be private. Only the user who creates this whiteboard will have permission to view and edit one."
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Creates a whiteboard in the space.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the corresponding space. Permission to create a whiteboard in the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            },
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": []
        },
        {
          "name": "Get whiteboard by id",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}whiteboards/:id",
              "query": [
                {
                  "key": "include-collaborators",
                  "value": "{{include-collaborators}}",
                  "disabled": true,
                  "description": "Includes collaborators on the whiteboard."
                },
                {
                  "key": "include-direct-children",
                  "value": "{{include-direct-children}}",
                  "disabled": true,
                  "description": "Includes direct children of the whiteboard, as defined in the `ChildrenResponse` object."
                },
                {
                  "key": "include-operations",
                  "value": "{{include-operations}}",
                  "disabled": true,
                  "description": "Includes operations associated with this whiteboard in the response, as defined in the `Operation` object.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                },
                {
                  "key": "include-properties",
                  "value": "{{include-properties}}",
                  "disabled": true,
                  "description": "Includes content properties associated with this whiteboard in the response.\nThe number of results will be limited to 50 and sorted in the default sort order.\nA `meta` and `_links` property will be present to indicate if more results are available and a link to retrieve the rest of the results."
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the whiteboard to be returned",
                  "disabled": false
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "",
                "disabled": false,
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "description": "Returns a specific whiteboard.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the whiteboard and its corresponding space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        },
        {
          "name": "Delete whiteboard",
          "request": {
            "url": {
              "protocol": "{{protocol}}",
              "host": "{{host}}",
              "path": "{{basePath}}whiteboards/:id",
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "description": "The ID of the whiteboard to be deleted.",
                  "disabled": false
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "description": "Delete a whiteboard by id.\n\nDeleting a whiteboard moves the whiteboard to the trash, where it can be restored later\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the whiteboard and its corresponding space.\nPermission to delete whiteboards in the space.",
            "auth": {
              "type": "basic",
              "basic": {
                "username": "{{username}}",
                "password": "{{apiToken}}"
              }
            }
          },
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "protocol",
      "name": "Protocol",
      "description": "The HTTP Protocol that should be used for this REST API.",
      "type": "string",
      "value": "https"
    },
    {
      "key": "host",
      "name": "Host",
      "description": "The HTTP host that should be used for this REST API.",
      "type": "string",
      "value": "api.atlassian.com"
    },
    {
      "key": "basePath",
      "name": "Base Path",
      "description": "The path, after the host, of the base of the REST API.",
      "type": "string",
      "value": "%7Byour-domain%7D/wiki/api/v2/"
    }
  ]
}